// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/base.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/base.proto</summary>
public static partial class BaseReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/base.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BaseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBwcm90by9iYXNlLnByb3RvIigKB01zZ1BhY2sSDgoGX01zZ0lEGAEgASgF",
          "Eg0KBV9Cb2R5GAIgASgMQi8KJGluZm8ueGlhb21vLmdhbWVDb3JlLnByb3Rv",
          "Y29sLmVudGl0eUIHQmFzZU1zZ2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPack), global::MsgPack.Parser, new[]{ "MsgID", "Body" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MsgPack : pb::IMessage<MsgPack> {
  private static readonly pb::MessageParser<MsgPack> _parser = new pb::MessageParser<MsgPack>(() => new MsgPack());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPack> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPack() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPack(MsgPack other) : this() {
    MsgID_ = other.MsgID_;
    Body_ = other.Body_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPack Clone() {
    return new MsgPack(this);
  }

  /// <summary>Field number for the "_MsgID" field.</summary>
  public const int MsgIDFieldNumber = 1;
  private int MsgID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MsgID {
    get { return MsgID_; }
    set {
      MsgID_ = value;
    }
  }

  /// <summary>Field number for the "_Body" field.</summary>
  public const int BodyFieldNumber = 2;
  private pb::ByteString Body_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Body {
    get { return Body_; }
    set {
      Body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPack);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPack other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MsgID != other.MsgID) return false;
    if (Body != other.Body) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MsgID != 0) hash ^= MsgID.GetHashCode();
    if (Body.Length != 0) hash ^= Body.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MsgID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MsgID);
    }
    if (Body.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Body);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MsgID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgID);
    }
    if (Body.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPack other) {
    if (other == null) {
      return;
    }
    if (other.MsgID != 0) {
      MsgID = other.MsgID;
    }
    if (other.Body.Length != 0) {
      Body = other.Body;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          MsgID = input.ReadInt32();
          break;
        }
        case 18: {
          Body = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
