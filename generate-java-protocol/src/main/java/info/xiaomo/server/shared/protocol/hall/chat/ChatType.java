// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HallChatMessage.proto

package info.xiaomo.server.shared.protocol.hall.chat;

/**
 * <pre>
 *聊天类型
 * </pre>
 *
 * Protobuf enum {@code ChatType}
 */
public enum ChatType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *私聊
   * </pre>
   *
   * <code>PRIVATE = 1;</code>
   */
  PRIVATE(1),
  /**
   * <pre>
   *公会
   * </pre>
   *
   * <code>GUILD = 2;</code>
   */
  GUILD(2),
  /**
   * <pre>
   *世界
   * </pre>
   *
   * <code>WORLD = 3;</code>
   */
  WORLD(3),
  /**
   * <pre>
   *跑马灯
   * </pre>
   *
   * <code>PMD = 4;</code>
   */
  PMD(4),
  ;

  /**
   * <pre>
   *私聊
   * </pre>
   *
   * <code>PRIVATE = 1;</code>
   */
  public static final int PRIVATE_VALUE = 1;
  /**
   * <pre>
   *公会
   * </pre>
   *
   * <code>GUILD = 2;</code>
   */
  public static final int GUILD_VALUE = 2;
  /**
   * <pre>
   *世界
   * </pre>
   *
   * <code>WORLD = 3;</code>
   */
  public static final int WORLD_VALUE = 3;
  /**
   * <pre>
   *跑马灯
   * </pre>
   *
   * <code>PMD = 4;</code>
   */
  public static final int PMD_VALUE = 4;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ChatType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ChatType forNumber(int value) {
    switch (value) {
      case 1: return PRIVATE;
      case 2: return GUILD;
      case 3: return WORLD;
      case 4: return PMD;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ChatType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ChatType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ChatType>() {
          public ChatType findValueByNumber(int number) {
            return ChatType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return info.xiaomo.server.shared.protocol.hall.chat.HallChatMessage.getDescriptor().getEnumTypes().get(0);
  }

  private static final ChatType[] VALUES = values();

  public static ChatType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ChatType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ChatType)
}

