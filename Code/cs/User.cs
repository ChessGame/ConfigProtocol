// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/user.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/user.proto</summary>
public static partial class UserReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/user.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static UserReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBwcm90by91c2VyLnByb3RvIjEKD1JlcUxvZ2luTWVzc2FnZRILCgNzZXgY",
          "AiABKAUSEQoJbG9naW5OYW1lGAMgASgJIjEKD1Jlc0xvZ2luTWVzc2FnZRIL",
          "CgNzZXgYAiABKAUSEQoJbG9naW5OYW1lGAMgASgJQiIKGmluZm8ueGlhb21v",
          "LnNlcnZlci5tZXNzYWdlQgRVc2VyYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ReqLoginMessage), global::ReqLoginMessage.Parser, new[]{ "Sex", "LoginName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResLoginMessage), global::ResLoginMessage.Parser, new[]{ "Sex", "LoginName" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ReqLoginMessage : pb::IMessage<ReqLoginMessage> {
  private static readonly pb::MessageParser<ReqLoginMessage> _parser = new pb::MessageParser<ReqLoginMessage>(() => new ReqLoginMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReqLoginMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UserReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLoginMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLoginMessage(ReqLoginMessage other) : this() {
    sex_ = other.sex_;
    loginName_ = other.loginName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLoginMessage Clone() {
    return new ReqLoginMessage(this);
  }

  /// <summary>Field number for the "sex" field.</summary>
  public const int SexFieldNumber = 2;
  private int sex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Sex {
    get { return sex_; }
    set {
      sex_ = value;
    }
  }

  /// <summary>Field number for the "loginName" field.</summary>
  public const int LoginNameFieldNumber = 3;
  private string loginName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LoginName {
    get { return loginName_; }
    set {
      loginName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReqLoginMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReqLoginMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sex != other.Sex) return false;
    if (LoginName != other.LoginName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Sex != 0) hash ^= Sex.GetHashCode();
    if (LoginName.Length != 0) hash ^= LoginName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Sex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Sex);
    }
    if (LoginName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LoginName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Sex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
    }
    if (LoginName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReqLoginMessage other) {
    if (other == null) {
      return;
    }
    if (other.Sex != 0) {
      Sex = other.Sex;
    }
    if (other.LoginName.Length != 0) {
      LoginName = other.LoginName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 16: {
          Sex = input.ReadInt32();
          break;
        }
        case 26: {
          LoginName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ResLoginMessage : pb::IMessage<ResLoginMessage> {
  private static readonly pb::MessageParser<ResLoginMessage> _parser = new pb::MessageParser<ResLoginMessage>(() => new ResLoginMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResLoginMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UserReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResLoginMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResLoginMessage(ResLoginMessage other) : this() {
    sex_ = other.sex_;
    loginName_ = other.loginName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResLoginMessage Clone() {
    return new ResLoginMessage(this);
  }

  /// <summary>Field number for the "sex" field.</summary>
  public const int SexFieldNumber = 2;
  private int sex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Sex {
    get { return sex_; }
    set {
      sex_ = value;
    }
  }

  /// <summary>Field number for the "loginName" field.</summary>
  public const int LoginNameFieldNumber = 3;
  private string loginName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LoginName {
    get { return loginName_; }
    set {
      loginName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResLoginMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResLoginMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sex != other.Sex) return false;
    if (LoginName != other.LoginName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Sex != 0) hash ^= Sex.GetHashCode();
    if (LoginName.Length != 0) hash ^= LoginName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Sex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Sex);
    }
    if (LoginName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LoginName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Sex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
    }
    if (LoginName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResLoginMessage other) {
    if (other == null) {
      return;
    }
    if (other.Sex != 0) {
      Sex = other.Sex;
    }
    if (other.LoginName.Length != 0) {
      LoginName = other.LoginName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 16: {
          Sex = input.ReadInt32();
          break;
        }
        case 26: {
          LoginName = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
