// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BydrRoomMessage.proto

package info.xiaomo.server.shared.protocol.gameserver.room;

/**
 * <pre>
 *鱼群信息
 * </pre>
 *
 * Protobuf type {@code FishInfo}
 */
public final class FishInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:FishInfo)
    FishInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FishInfo.newBuilder() to construct.
  private FishInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FishInfo() {
    id_ = emptyLongList();
    configId_ = emptyIntList();
    trackId_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FishInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FishInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              id_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            id_.addLong(input.readInt64());
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              id_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              id_.addLong(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              configId_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            configId_.addInt(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              configId_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              configId_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              trackId_ = newIntList();
              mutable_bitField0_ |= 0x00000004;
            }
            trackId_.addInt(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
              trackId_ = newIntList();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              trackId_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {
            bitField0_ |= 0x00000001;
            formation_ = input.readInt32();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000002;
            bornTime_ = input.readInt64();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000004;
            serverTime_ = input.readInt64();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000008;
            speed_ = input.readInt32();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000010;
            topSpeed_ = input.readInt32();
            break;
          }
          case 80: {
            bitField0_ |= 0x00000020;
            topSpeedStartTime_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        id_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        configId_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        trackId_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.xiaomo.server.shared.protocol.gameserver.room.BydrRoomMessage.internal_static_FishInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.xiaomo.server.shared.protocol.gameserver.room.BydrRoomMessage.internal_static_FishInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.class, info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.LongList id_;
  /**
   * <pre>
   *唯一ID，多个为鱼群
   * </pre>
   *
   * <code>repeated int64 id = 1;</code>
   * @return A list containing the id.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getIdList() {
    return id_;
  }
  /**
   * <pre>
   *唯一ID，多个为鱼群
   * </pre>
   *
   * <code>repeated int64 id = 1;</code>
   * @return The count of id.
   */
  public int getIdCount() {
    return id_.size();
  }
  /**
   * <pre>
   *唯一ID，多个为鱼群
   * </pre>
   *
   * <code>repeated int64 id = 1;</code>
   * @param index The index of the element to return.
   * @return The id at the given index.
   */
  public long getId(int index) {
    return id_.getLong(index);
  }

  public static final int CONFIGID_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList configId_;
  /**
   * <pre>
   *鱼配置ID（和id对应，同一鱼群不同的鱼）
   * </pre>
   *
   * <code>repeated int32 configId = 2;</code>
   * @return A list containing the configId.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getConfigIdList() {
    return configId_;
  }
  /**
   * <pre>
   *鱼配置ID（和id对应，同一鱼群不同的鱼）
   * </pre>
   *
   * <code>repeated int32 configId = 2;</code>
   * @return The count of configId.
   */
  public int getConfigIdCount() {
    return configId_.size();
  }
  /**
   * <pre>
   *鱼配置ID（和id对应，同一鱼群不同的鱼）
   * </pre>
   *
   * <code>repeated int32 configId = 2;</code>
   * @param index The index of the element to return.
   * @return The configId at the given index.
   */
  public int getConfigId(int index) {
    return configId_.getInt(index);
  }

  public static final int TRACKID_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.IntList trackId_;
  /**
   * <pre>
   *鱼游动的轨迹ID 鱼潮发阵型ID
   * </pre>
   *
   * <code>repeated int32 trackId = 3;</code>
   * @return A list containing the trackId.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getTrackIdList() {
    return trackId_;
  }
  /**
   * <pre>
   *鱼游动的轨迹ID 鱼潮发阵型ID
   * </pre>
   *
   * <code>repeated int32 trackId = 3;</code>
   * @return The count of trackId.
   */
  public int getTrackIdCount() {
    return trackId_.size();
  }
  /**
   * <pre>
   *鱼游动的轨迹ID 鱼潮发阵型ID
   * </pre>
   *
   * <code>repeated int32 trackId = 3;</code>
   * @param index The index of the element to return.
   * @return The trackId at the given index.
   */
  public int getTrackId(int index) {
    return trackId_.getInt(index);
  }

  public static final int FORMATION_FIELD_NUMBER = 4;
  private int formation_;
  /**
   * <pre>
   *鱼群阵型 0普通情况 1boss 100阵型id
   * </pre>
   *
   * <code>optional int32 formation = 4;</code>
   * @return Whether the formation field is set.
   */
  @java.lang.Override
  public boolean hasFormation() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   *鱼群阵型 0普通情况 1boss 100阵型id
   * </pre>
   *
   * <code>optional int32 formation = 4;</code>
   * @return The formation.
   */
  @java.lang.Override
  public int getFormation() {
    return formation_;
  }

  public static final int BORNTIME_FIELD_NUMBER = 5;
  private long bornTime_;
  /**
   * <pre>
   *出生时间戳
   * </pre>
   *
   * <code>required int64 bornTime = 5;</code>
   * @return Whether the bornTime field is set.
   */
  @java.lang.Override
  public boolean hasBornTime() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   *出生时间戳
   * </pre>
   *
   * <code>required int64 bornTime = 5;</code>
   * @return The bornTime.
   */
  @java.lang.Override
  public long getBornTime() {
    return bornTime_;
  }

  public static final int SERVERTIME_FIELD_NUMBER = 6;
  private long serverTime_;
  /**
   * <pre>
   *系统时间戳
   * </pre>
   *
   * <code>required int64 serverTime = 6;</code>
   * @return Whether the serverTime field is set.
   */
  @java.lang.Override
  public boolean hasServerTime() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   *系统时间戳
   * </pre>
   *
   * <code>required int64 serverTime = 6;</code>
   * @return The serverTime.
   */
  @java.lang.Override
  public long getServerTime() {
    return serverTime_;
  }

  public static final int SPEED_FIELD_NUMBER = 7;
  private int speed_;
  /**
   * <pre>
   *速度
   * </pre>
   *
   * <code>optional int32 speed = 7;</code>
   * @return Whether the speed field is set.
   */
  @java.lang.Override
  public boolean hasSpeed() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   *速度
   * </pre>
   *
   * <code>optional int32 speed = 7;</code>
   * @return The speed.
   */
  @java.lang.Override
  public int getSpeed() {
    return speed_;
  }

  public static final int TOPSPEED_FIELD_NUMBER = 9;
  private int topSpeed_;
  /**
   * <pre>
   *极速
   * </pre>
   *
   * <code>optional int32 topSpeed = 9;</code>
   * @return Whether the topSpeed field is set.
   */
  @java.lang.Override
  public boolean hasTopSpeed() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   *极速
   * </pre>
   *
   * <code>optional int32 topSpeed = 9;</code>
   * @return The topSpeed.
   */
  @java.lang.Override
  public int getTopSpeed() {
    return topSpeed_;
  }

  public static final int TOPSPEEDSTARTTIME_FIELD_NUMBER = 10;
  private long topSpeedStartTime_;
  /**
   * <pre>
   *极速开始时间
   * </pre>
   *
   * <code>optional int64 topSpeedStartTime = 10;</code>
   * @return Whether the topSpeedStartTime field is set.
   */
  @java.lang.Override
  public boolean hasTopSpeedStartTime() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   *极速开始时间
   * </pre>
   *
   * <code>optional int64 topSpeedStartTime = 10;</code>
   * @return The topSpeedStartTime.
   */
  @java.lang.Override
  public long getTopSpeedStartTime() {
    return topSpeedStartTime_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBornTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasServerTime()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < id_.size(); i++) {
      output.writeInt64(1, id_.getLong(i));
    }
    for (int i = 0; i < configId_.size(); i++) {
      output.writeInt32(2, configId_.getInt(i));
    }
    for (int i = 0; i < trackId_.size(); i++) {
      output.writeInt32(3, trackId_.getInt(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(4, formation_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(5, bornTime_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt64(6, serverTime_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt32(7, speed_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt32(9, topSpeed_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeInt64(10, topSpeedStartTime_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < id_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(id_.getLong(i));
      }
      size += dataSize;
      size += 1 * getIdList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < configId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(configId_.getInt(i));
      }
      size += dataSize;
      size += 1 * getConfigIdList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < trackId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(trackId_.getInt(i));
      }
      size += dataSize;
      size += 1 * getTrackIdList().size();
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, formation_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, bornTime_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, serverTime_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, speed_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, topSpeed_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, topSpeedStartTime_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.xiaomo.server.shared.protocol.gameserver.room.FishInfo)) {
      return super.equals(obj);
    }
    info.xiaomo.server.shared.protocol.gameserver.room.FishInfo other = (info.xiaomo.server.shared.protocol.gameserver.room.FishInfo) obj;

    if (!getIdList()
        .equals(other.getIdList())) return false;
    if (!getConfigIdList()
        .equals(other.getConfigIdList())) return false;
    if (!getTrackIdList()
        .equals(other.getTrackIdList())) return false;
    if (hasFormation() != other.hasFormation()) return false;
    if (hasFormation()) {
      if (getFormation()
          != other.getFormation()) return false;
    }
    if (hasBornTime() != other.hasBornTime()) return false;
    if (hasBornTime()) {
      if (getBornTime()
          != other.getBornTime()) return false;
    }
    if (hasServerTime() != other.hasServerTime()) return false;
    if (hasServerTime()) {
      if (getServerTime()
          != other.getServerTime()) return false;
    }
    if (hasSpeed() != other.hasSpeed()) return false;
    if (hasSpeed()) {
      if (getSpeed()
          != other.getSpeed()) return false;
    }
    if (hasTopSpeed() != other.hasTopSpeed()) return false;
    if (hasTopSpeed()) {
      if (getTopSpeed()
          != other.getTopSpeed()) return false;
    }
    if (hasTopSpeedStartTime() != other.hasTopSpeedStartTime()) return false;
    if (hasTopSpeedStartTime()) {
      if (getTopSpeedStartTime()
          != other.getTopSpeedStartTime()) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getIdCount() > 0) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getIdList().hashCode();
    }
    if (getConfigIdCount() > 0) {
      hash = (37 * hash) + CONFIGID_FIELD_NUMBER;
      hash = (53 * hash) + getConfigIdList().hashCode();
    }
    if (getTrackIdCount() > 0) {
      hash = (37 * hash) + TRACKID_FIELD_NUMBER;
      hash = (53 * hash) + getTrackIdList().hashCode();
    }
    if (hasFormation()) {
      hash = (37 * hash) + FORMATION_FIELD_NUMBER;
      hash = (53 * hash) + getFormation();
    }
    if (hasBornTime()) {
      hash = (37 * hash) + BORNTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBornTime());
    }
    if (hasServerTime()) {
      hash = (37 * hash) + SERVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getServerTime());
    }
    if (hasSpeed()) {
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSpeed();
    }
    if (hasTopSpeed()) {
      hash = (37 * hash) + TOPSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getTopSpeed();
    }
    if (hasTopSpeedStartTime()) {
      hash = (37 * hash) + TOPSPEEDSTARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTopSpeedStartTime());
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.xiaomo.server.shared.protocol.gameserver.room.FishInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *鱼群信息
   * </pre>
   *
   * Protobuf type {@code FishInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:FishInfo)
      info.xiaomo.server.shared.protocol.gameserver.room.FishInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.xiaomo.server.shared.protocol.gameserver.room.BydrRoomMessage.internal_static_FishInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.xiaomo.server.shared.protocol.gameserver.room.BydrRoomMessage.internal_static_FishInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.class, info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.Builder.class);
    }

    // Construct using info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      configId_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      trackId_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      formation_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      bornTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000010);
      serverTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      speed_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      topSpeed_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      topSpeedStartTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.xiaomo.server.shared.protocol.gameserver.room.BydrRoomMessage.internal_static_FishInfo_descriptor;
    }

    @java.lang.Override
    public info.xiaomo.server.shared.protocol.gameserver.room.FishInfo getDefaultInstanceForType() {
      return info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.getDefaultInstance();
    }

    @java.lang.Override
    public info.xiaomo.server.shared.protocol.gameserver.room.FishInfo build() {
      info.xiaomo.server.shared.protocol.gameserver.room.FishInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.xiaomo.server.shared.protocol.gameserver.room.FishInfo buildPartial() {
      info.xiaomo.server.shared.protocol.gameserver.room.FishInfo result = new info.xiaomo.server.shared.protocol.gameserver.room.FishInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        id_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.id_ = id_;
      if (((bitField0_ & 0x00000002) != 0)) {
        configId_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.configId_ = configId_;
      if (((bitField0_ & 0x00000004) != 0)) {
        trackId_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.trackId_ = trackId_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.formation_ = formation_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.bornTime_ = bornTime_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.serverTime_ = serverTime_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.speed_ = speed_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.topSpeed_ = topSpeed_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.topSpeedStartTime_ = topSpeedStartTime_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.xiaomo.server.shared.protocol.gameserver.room.FishInfo) {
        return mergeFrom((info.xiaomo.server.shared.protocol.gameserver.room.FishInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.xiaomo.server.shared.protocol.gameserver.room.FishInfo other) {
      if (other == info.xiaomo.server.shared.protocol.gameserver.room.FishInfo.getDefaultInstance()) return this;
      if (!other.id_.isEmpty()) {
        if (id_.isEmpty()) {
          id_ = other.id_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureIdIsMutable();
          id_.addAll(other.id_);
        }
        onChanged();
      }
      if (!other.configId_.isEmpty()) {
        if (configId_.isEmpty()) {
          configId_ = other.configId_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureConfigIdIsMutable();
          configId_.addAll(other.configId_);
        }
        onChanged();
      }
      if (!other.trackId_.isEmpty()) {
        if (trackId_.isEmpty()) {
          trackId_ = other.trackId_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureTrackIdIsMutable();
          trackId_.addAll(other.trackId_);
        }
        onChanged();
      }
      if (other.hasFormation()) {
        setFormation(other.getFormation());
      }
      if (other.hasBornTime()) {
        setBornTime(other.getBornTime());
      }
      if (other.hasServerTime()) {
        setServerTime(other.getServerTime());
      }
      if (other.hasSpeed()) {
        setSpeed(other.getSpeed());
      }
      if (other.hasTopSpeed()) {
        setTopSpeed(other.getTopSpeed());
      }
      if (other.hasTopSpeedStartTime()) {
        setTopSpeedStartTime(other.getTopSpeedStartTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasBornTime()) {
        return false;
      }
      if (!hasServerTime()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      info.xiaomo.server.shared.protocol.gameserver.room.FishInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (info.xiaomo.server.shared.protocol.gameserver.room.FishInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.LongList id_ = emptyLongList();
    private void ensureIdIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        id_ = mutableCopy(id_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @return A list containing the id.
     */
    public java.util.List<java.lang.Long>
        getIdList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(id_) : id_;
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @return The count of id.
     */
    public int getIdCount() {
      return id_.size();
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @param index The index of the element to return.
     * @return The id at the given index.
     */
    public long getId(int index) {
      return id_.getLong(index);
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @param index The index to set the value at.
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        int index, long value) {
      ensureIdIsMutable();
      id_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @param value The id to add.
     * @return This builder for chaining.
     */
    public Builder addId(long value) {
      ensureIdIsMutable();
      id_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @param values The id to add.
     * @return This builder for chaining.
     */
    public Builder addAllId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, id_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *唯一ID，多个为鱼群
     * </pre>
     *
     * <code>repeated int64 id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList configId_ = emptyIntList();
    private void ensureConfigIdIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        configId_ = mutableCopy(configId_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @return A list containing the configId.
     */
    public java.util.List<java.lang.Integer>
        getConfigIdList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(configId_) : configId_;
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @return The count of configId.
     */
    public int getConfigIdCount() {
      return configId_.size();
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @param index The index of the element to return.
     * @return The configId at the given index.
     */
    public int getConfigId(int index) {
      return configId_.getInt(index);
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @param index The index to set the value at.
     * @param value The configId to set.
     * @return This builder for chaining.
     */
    public Builder setConfigId(
        int index, int value) {
      ensureConfigIdIsMutable();
      configId_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @param value The configId to add.
     * @return This builder for chaining.
     */
    public Builder addConfigId(int value) {
      ensureConfigIdIsMutable();
      configId_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @param values The configId to add.
     * @return This builder for chaining.
     */
    public Builder addAllConfigId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureConfigIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, configId_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼配置ID（和id对应，同一鱼群不同的鱼）
     * </pre>
     *
     * <code>repeated int32 configId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearConfigId() {
      configId_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList trackId_ = emptyIntList();
    private void ensureTrackIdIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        trackId_ = mutableCopy(trackId_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @return A list containing the trackId.
     */
    public java.util.List<java.lang.Integer>
        getTrackIdList() {
      return ((bitField0_ & 0x00000004) != 0) ?
               java.util.Collections.unmodifiableList(trackId_) : trackId_;
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @return The count of trackId.
     */
    public int getTrackIdCount() {
      return trackId_.size();
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @param index The index of the element to return.
     * @return The trackId at the given index.
     */
    public int getTrackId(int index) {
      return trackId_.getInt(index);
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @param index The index to set the value at.
     * @param value The trackId to set.
     * @return This builder for chaining.
     */
    public Builder setTrackId(
        int index, int value) {
      ensureTrackIdIsMutable();
      trackId_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @param value The trackId to add.
     * @return This builder for chaining.
     */
    public Builder addTrackId(int value) {
      ensureTrackIdIsMutable();
      trackId_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @param values The trackId to add.
     * @return This builder for chaining.
     */
    public Builder addAllTrackId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureTrackIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, trackId_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼游动的轨迹ID 鱼潮发阵型ID
     * </pre>
     *
     * <code>repeated int32 trackId = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrackId() {
      trackId_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private int formation_ ;
    /**
     * <pre>
     *鱼群阵型 0普通情况 1boss 100阵型id
     * </pre>
     *
     * <code>optional int32 formation = 4;</code>
     * @return Whether the formation field is set.
     */
    @java.lang.Override
    public boolean hasFormation() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *鱼群阵型 0普通情况 1boss 100阵型id
     * </pre>
     *
     * <code>optional int32 formation = 4;</code>
     * @return The formation.
     */
    @java.lang.Override
    public int getFormation() {
      return formation_;
    }
    /**
     * <pre>
     *鱼群阵型 0普通情况 1boss 100阵型id
     * </pre>
     *
     * <code>optional int32 formation = 4;</code>
     * @param value The formation to set.
     * @return This builder for chaining.
     */
    public Builder setFormation(int value) {
      bitField0_ |= 0x00000008;
      formation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *鱼群阵型 0普通情况 1boss 100阵型id
     * </pre>
     *
     * <code>optional int32 formation = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormation() {
      bitField0_ = (bitField0_ & ~0x00000008);
      formation_ = 0;
      onChanged();
      return this;
    }

    private long bornTime_ ;
    /**
     * <pre>
     *出生时间戳
     * </pre>
     *
     * <code>required int64 bornTime = 5;</code>
     * @return Whether the bornTime field is set.
     */
    @java.lang.Override
    public boolean hasBornTime() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *出生时间戳
     * </pre>
     *
     * <code>required int64 bornTime = 5;</code>
     * @return The bornTime.
     */
    @java.lang.Override
    public long getBornTime() {
      return bornTime_;
    }
    /**
     * <pre>
     *出生时间戳
     * </pre>
     *
     * <code>required int64 bornTime = 5;</code>
     * @param value The bornTime to set.
     * @return This builder for chaining.
     */
    public Builder setBornTime(long value) {
      bitField0_ |= 0x00000010;
      bornTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *出生时间戳
     * </pre>
     *
     * <code>required int64 bornTime = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearBornTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      bornTime_ = 0L;
      onChanged();
      return this;
    }

    private long serverTime_ ;
    /**
     * <pre>
     *系统时间戳
     * </pre>
     *
     * <code>required int64 serverTime = 6;</code>
     * @return Whether the serverTime field is set.
     */
    @java.lang.Override
    public boolean hasServerTime() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *系统时间戳
     * </pre>
     *
     * <code>required int64 serverTime = 6;</code>
     * @return The serverTime.
     */
    @java.lang.Override
    public long getServerTime() {
      return serverTime_;
    }
    /**
     * <pre>
     *系统时间戳
     * </pre>
     *
     * <code>required int64 serverTime = 6;</code>
     * @param value The serverTime to set.
     * @return This builder for chaining.
     */
    public Builder setServerTime(long value) {
      bitField0_ |= 0x00000020;
      serverTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *系统时间戳
     * </pre>
     *
     * <code>required int64 serverTime = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      serverTime_ = 0L;
      onChanged();
      return this;
    }

    private int speed_ ;
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional int32 speed = 7;</code>
     * @return Whether the speed field is set.
     */
    @java.lang.Override
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional int32 speed = 7;</code>
     * @return The speed.
     */
    @java.lang.Override
    public int getSpeed() {
      return speed_;
    }
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional int32 speed = 7;</code>
     * @param value The speed to set.
     * @return This builder for chaining.
     */
    public Builder setSpeed(int value) {
      bitField0_ |= 0x00000040;
      speed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional int32 speed = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpeed() {
      bitField0_ = (bitField0_ & ~0x00000040);
      speed_ = 0;
      onChanged();
      return this;
    }

    private int topSpeed_ ;
    /**
     * <pre>
     *极速
     * </pre>
     *
     * <code>optional int32 topSpeed = 9;</code>
     * @return Whether the topSpeed field is set.
     */
    @java.lang.Override
    public boolean hasTopSpeed() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *极速
     * </pre>
     *
     * <code>optional int32 topSpeed = 9;</code>
     * @return The topSpeed.
     */
    @java.lang.Override
    public int getTopSpeed() {
      return topSpeed_;
    }
    /**
     * <pre>
     *极速
     * </pre>
     *
     * <code>optional int32 topSpeed = 9;</code>
     * @param value The topSpeed to set.
     * @return This builder for chaining.
     */
    public Builder setTopSpeed(int value) {
      bitField0_ |= 0x00000080;
      topSpeed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *极速
     * </pre>
     *
     * <code>optional int32 topSpeed = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopSpeed() {
      bitField0_ = (bitField0_ & ~0x00000080);
      topSpeed_ = 0;
      onChanged();
      return this;
    }

    private long topSpeedStartTime_ ;
    /**
     * <pre>
     *极速开始时间
     * </pre>
     *
     * <code>optional int64 topSpeedStartTime = 10;</code>
     * @return Whether the topSpeedStartTime field is set.
     */
    @java.lang.Override
    public boolean hasTopSpeedStartTime() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *极速开始时间
     * </pre>
     *
     * <code>optional int64 topSpeedStartTime = 10;</code>
     * @return The topSpeedStartTime.
     */
    @java.lang.Override
    public long getTopSpeedStartTime() {
      return topSpeedStartTime_;
    }
    /**
     * <pre>
     *极速开始时间
     * </pre>
     *
     * <code>optional int64 topSpeedStartTime = 10;</code>
     * @param value The topSpeedStartTime to set.
     * @return This builder for chaining.
     */
    public Builder setTopSpeedStartTime(long value) {
      bitField0_ |= 0x00000100;
      topSpeedStartTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *极速开始时间
     * </pre>
     *
     * <code>optional int64 topSpeedStartTime = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopSpeedStartTime() {
      bitField0_ = (bitField0_ & ~0x00000100);
      topSpeedStartTime_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:FishInfo)
  }

  // @@protoc_insertion_point(class_scope:FishInfo)
  private static final info.xiaomo.server.shared.protocol.gameserver.room.FishInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.xiaomo.server.shared.protocol.gameserver.room.FishInfo();
  }

  public static info.xiaomo.server.shared.protocol.gameserver.room.FishInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<FishInfo>
      PARSER = new com.google.protobuf.AbstractParser<FishInfo>() {
    @java.lang.Override
    public FishInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FishInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FishInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FishInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.xiaomo.server.shared.protocol.gameserver.room.FishInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

